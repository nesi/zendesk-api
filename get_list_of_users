#!/usr/bin/env python

# Get a list of users in Zendesk.
#
# Author: Benjamin Roberts <ben.roberts@nesi.org.nz>

import sys,os
import re
import getpass
import codecs, json
import requests

progname = os.path.basename(__file__)
#sys.stdout = codecs.getwriter('utf8')(sys.stdout)

website = "nesi.zendesk.com"
headers = { 'Content-Type' : 'application/json' }
preferred_locale = "en-gb"

print "This script requires that you have a so-called default password for Zendesk"
print "(i.e., a different password than your single sign-on password through Tuakiri)."
print "If you do not have such a password or have forgotten it, please visit:"
print ""
print "      https://{0}/access/help".format(website)
print ""
#zdmyusername = raw_input("Please enter your Zendesk primary email address: ")
zdmyusername = 'robertsb@landcareresearch.co.nz'
zdmypassword = getpass.getpass("Please enter your Zendesk default password: ")

allusers = []
whitelist = [
        'John V. DelSignore, Jr.',
        'Nagios, the Pan cluster monitor',
        'The nesi.apps user on the Pan login node',
        'The root user on the Pan login node',
        'University of Auckland IT Operations Centre',
        'University of Auckland Staff Service Centre',
        ]

canonical_firstnames = {
        'Chris': 'Christopher',
        'Dave': 'David',
        'Mike': 'Michael',
        'Pete': 'Peter',
        'Tim': 'Timothy'
        }

with open('zendesk_users.txt', 'w') as outputfile:
    main_users_url = "https://{0}/api/v2/users.json".format(website)
    users_url = main_users_url
    while users_url:
        try:
            users_page = requests.get(users_url, auth=(zdmyusername, zdmypassword))
        except ValueError:
            print "Could not fetch JSON data from which to compile a list of users."
            print "Perhaps your username and/or password was not entered correctly?"
            sys.exit(1)
        users_page_content = users_page.json()
        try:
            for user in users_page_content['users']:
                allusers.append({'id': user['id'], 'name': user['name']})
        except KeyError:
            print "Could not fetch JSON data from which to compile a list of users."
            print "Perhaps your username and/or password was not entered correctly?"
            sys.exit(1)
        users_url = users_page_content['next_page']

# Perform some name integrity checks and canonicalise names
for user in allusers:
    for wl_entry in whitelist:
        if user['name'] == wl_entry:
            user['surname'] = None
            break
    # Only get here if this name doesn't match any whitelist entry
    else:
        (revised_name, count) = re.subn(r'^([^,]+),\s*([^,]+)$', r'\2 \1', user['name'])
        if count != 0:
            print "Warning: User {0} found with comma in name. Canonical name: {1}?".format(user['name'], revised_name)
            print "Please correct in Zendesk or add to whitelist."
            sys.exit(1)
        
        name_components = user['name'].split()
        user['firstname'] = name_components[0]
        if len(name_components) > 1:
            user['surname'] = name_components[len(name_components)-1]
        else:
            user['surname'] = None
        try:
            user['canonical_firstname'] = canonical_firstnames[user['firstname']]
        except KeyError:
            user['canonical_firstname'] = user['firstname']

for userone in allusers:
    for usertwo in allusers:
        if userone['id'] >= usertwo['id']:
            continue
        try:
            if userone['surname'] is not None and usertwo['surname'] is not None and userone['surname'] == usertwo['surname'] and (userone['firstname'].lower() == usertwo['firstname'].lower() or userone['canonical_firstname'].lower() == usertwo['canonical_firstname'].lower()):
                print "Suspected duplicates:"
                print userone
                print usertwo
        except KeyError:
            print "Error!"
            print userone
            print usertwo
